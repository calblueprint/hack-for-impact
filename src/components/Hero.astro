---
import { Image } from 'astro:assets';
import Button from './Button.astro';
import TitleAccent from './TitleAccent.astro';
import stopwatchIcon from '../graphics/stopwatch.svg';
import arrowsIcon from '../graphics/arrows.svg';
import heroGraphicLeft from '../graphics/hero_shapes_left.svg';
import heroGraphicRight from '../graphics/hero_shapes_right.svg';
import bearLeft from '../graphics/bear_orange.svg';
import bearRight from '../graphics/bear_blue.svg';
import Brand from './Brand.astro';
---

<section>
  <h4>FEBRUARY 25, 2024 @ UNIVERSITY OF CALIFORNIA, BERKELEY</h4>
  <h1>
    Hack for Impact 2024 connects a community of
    <TitleAccent
      words={['change-makers', 'leaders', 'creators', 'visionaries']}
    />
    to tackle social challenges
  </h1>
  <article>
    <Button variant="secondary">
      <p class="btn-text">Registration will open January 24!</p>
      <Image src={stopwatchIcon} alt="stopwatch" />
    </Button>
    <span>
      Stay tuned! In the meantime, follow

      <a
        href="https://www.instagram.com/calblueprint/"
        target="_blank"
        referrerpolicy="no-referrer">@calblueprint</a
      >

      and

      <a
        href="https://www.instagram.com/calhacks/"
        target="_blank"
        referrerpolicy="no-referrer">@calhacks</a
      >

      on Instagram for updates.
    </span>
  </article>

  <Image class="arrows" src={arrowsIcon} alt="arrows" />

  <!-- graphics, positioned absolutely -->
  <div class="parallax-container">
    <div class="parallax-group">
      <div class="parallax parallax-normal">
        <Image class="bear-left" src={bearLeft} alt="bear with cape" />
        <Image class="bear-right" src={bearRight} alt="bear with cape" />
      </div>
      <div class="parallax parallax-slow">
        <Image class="hero-left" src={heroGraphicLeft} alt="clouds and stars" />
        <Image
          class="hero-right"
          src={heroGraphicRight}
          alt="clouds and sparkles"
        />
        <Brand class="hero-brand" />
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  @use '../styles/colors';
  @use '../styles/breakpoints';

  section {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    flex: 1;
    padding: 0 12%;
    text-align: center;
    gap: 20px;
    position: relative;

    h1 {
      margin: 0.5rem 0;
      font-size: clamp(1.5rem, 4vw, 3.25rem);

      @media (min-width: breakpoints.$laptop) {
        width: 53.875rem;
      }
    }

    article {
      display: flex;
      flex-direction: column;
      width: min-content;
      gap: 20px;
    }

    span > a:hover {
      text-decoration-line: underline;
    }
  }

  .btn-text {
    width: max-content;

    @media (min-width: breakpoints.$phone) {
      font-size: 1.25rem;
    }
  }

  // arrow scroll indication
  .arrows {
    position: absolute;
    bottom: 2svh;
    animation: bounce 5s ease infinite;
    width: 16px;

    @media (min-width: breakpoints.$tablet) {
      width: 20px;
    }
  }

  @keyframes bounce {
    0%,
    10%,
    25%,
    40%,
    50% {
      transform: translateY(0);
    }

    20% {
      transform: translateY(-20px);
    }

    30% {
      transform: translateY(-10px);
    }
  }

  // bg graphic parallax
  // kudos to https://keithclark.co.uk/articles/pure-css-parallax-websites/ (1/12/2024)
  .parallax-container {
    position: absolute;
    width: 100%;
    height: 100svh;
    perspective: 1px;
    overflow: hidden;
    z-index: -1;
    display: none;

    @media (min-width: breakpoints.$tablet) {
      display: block;
    }

    .parallax-group {
      position: relative;
      height: 100svh;
      transform-style: preserve-3d;

      .parallax {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
      }
    }

    .parallax-normal {
      transform: translateZ(0);
    }

    .parallax-slow {
      transform: translateZ(-1px) scale(2);
    }

    // positioning graphics
    $offset-left: 200px;
    $offset-right: 200px;

    .hero-left {
      position: absolute;
      left: -$offset-left;
      top: 50%;
      z-index: -1;
      height: 80%;
      transform: translateX(min(12vw, $offset-left)) translateY(-50%);
    }

    .hero-right {
      position: absolute;
      right: -$offset-right;
      top: 50%;
      z-index: -1;
      height: 80%;
      transform: translateX(clamp(#{-$offset-right}, -12vw, 0px))
        translateY(-50%);
    }

    .hero-brand {
      $offset: 50px;
      position: absolute;
      right: -$offset;
      top: 70%;
      transform: translate(calc(clamp(#{-$offset}, -12vw, 0px) - 10px), 50%);
    }

    .bear-left {
      position: absolute;
      left: -$offset-left;
      top: 50%;
      transform: translate(
        calc(10px + min(12vw, $offset-left)),
        calc(70px - 50%)
      );
    }

    .bear-right {
      position: absolute;
      right: -$offset-right;
      top: 50%;
      transform: translate(
        calc(25px + clamp(#{-$offset-right}, -12vw, 0px)),
        calc(-160px - 50%)
      );
    }
  }
</style>

<script lang="js">
  const heroParallax = document.querySelector('.parallax-container');

  window.addEventListener('scroll', e => {
    // hacky fix, but will suffice for now
    if (e && e.target && e.target.location && e.target.location.hash) return;
    if (heroParallax) heroParallax.scrollTop = window.scrollY / 4;
  });
</script>
